---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import type { Socials } from "@types";
import { SITE, HOME, SOCIALS } from "@consts";

const blog: CollectionEntry<"blog">[] = (await getCollection("blog"))
  .filter((post: CollectionEntry<"blog">) => !post.data.draft)
  .sort((a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) => 
    b.data.date.valueOf() - a.data.date.valueOf()
  );

// Website Schema
const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "Shopperqueries",
  "url": "https://shopperqueries.com",
  "description": "Explore a new realm of shopping satisfaction with Shopperqueries, your trusted guide to elevated shopping experiences.",
  "publisher": {
    "@type": "Organization",
    "name": "Shopperqueries",
    "logo": {
      "@type": "ImageObject",
      "url": "https://shopperqueries.com/logo.png"
    }
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://shopperqueries.com/search?q={search_term_string}",
    "query-input": "required name=search_term_string"
  }
};

// Blog List Schema
const blogListSchema = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": blog.slice(0, SITE.NUM_POSTS_ON_HOMEPAGE).map((post, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "item": {
      "@type": "Article",
      "headline": post.data.title,
      "author": {
        "@type": "Person",
        "name": post.data.author || "Shopperqueries Team"
      },
      "datePublished": post.data.date.toISOString(),
      "image": post.data.image || "https://shopperqueries.com/default-image.jpg",
      "url": `https://shopperqueries.com/blog/${post.slug}`
    }
  }))
};
---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <script type="application/ld+json" set:html={JSON.stringify(websiteSchema, null, 2)}></script>
  
  {blog.length > 0 && (
    <script type="application/ld+json" set:html={JSON.stringify(blogListSchema, null, 2)}></script>
  )}

  <Container>
    <aside data-pagefind-ignore>
      <h1 class="font-semibold text-black dark:text-white">
        Elevate Your Shopping Experience with Shopperqueries
      </h1>
      <div class="space-y-16">
        <section>
          <article class="space-y-4">
            <span>
              <p>
                Explore a new realm of shopping satisfaction with Shopperqueries, your trusted guide to elevated shopping experiences.
              </p>
              <p>
                From traveling to tech, we're here to transform your queries into seamless finds, ensuring every purchase is nothing short of perfect.
              </p>
            </span>
          </article>
        </section>

        {
          blog.length > 0 && (
            <section>
              <h2 class="mb-4 text-lg font-semibold text-black dark:text-white">
                Recent Posts
              </h2>
              <ul class="grid grid-cols-1 gap-4">
                {blog.slice(0, SITE.NUM_POSTS_ON_HOMEPAGE).map((post: CollectionEntry<"blog">) => (
                  <li>
                    <ArrowCard entry={post} />
                  </li>
                ))}
              </ul>
            </section>
          )
        }

        <section class="animate space-y-4">
          <h2 class="font-semibold text-black dark:text-white">
            Let's Connect
          </h2>
          <article>
            <p>
              If you want to get in touch with me about something or just to say
              hi, reach out on social media or send me an email.
            </p>
          </article>
          <ul class="not-prose flex flex-wrap gap-2">
            {
              SOCIALS.map((social: Socials[number]) => (
                <li class="flex gap-x-2 text-nowrap">
                  <Link
                    href={social.HREF}
                    external
                    aria-label={`${SITE.TITLE} on ${social.NAME}`}
                  >
                    {social.NAME}
                  </Link>
                  {"/"}
                </li>
              ))
            }
            <li class="line-clamp-1">
              <Link
                href={`mailto:${SITE.EMAIL}`}
                aria-label={`Email ${SITE.TITLE}`}
              >
                {SITE.EMAIL}
              </Link>
            </li>
          </ul>
        </section>
      </div>
    </aside>
  </Container>
</Layout>
