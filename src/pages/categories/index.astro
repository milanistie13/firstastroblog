---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { CATEGORIES } from "@consts";
import Breadcrumb from "@components/Breadcrumb.astro";
import { capitalizeWords } from "@lib/utils";

const posts: CollectionEntry<"blog">[] = await getCollection("blog");
const categories: string[] = [...new Set(
  posts
    .map(post => post.data.category)
    .filter((category): category is string => category !== undefined)
)].sort();

const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Categories' }
];

---

<Layout title={CATEGORIES.TITLE} description={CATEGORIES.DESCRIPTION}>
  <Container>
    <Breadcrumb items={breadcrumbItems} />
    <div class="space-y-6">
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        Categories
      </h1>
      <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
        {
          categories.map((category) => {
            const categoryPosts = posts.filter(post => post.data.category?.toLowerCase() === category.toLowerCase());
            return (
              <a
                href={`/categories/${category.toLowerCase().replace(/\s+/g, '-')}`}
                class="group flex items-center justify-between rounded-xl border border-black/10 p-4 transition-colors duration-300 ease-in-out hover:bg-black/5 focus-visible:bg-black/5 dark:border-white/10 dark:hover:bg-white/5 dark:focus-visible:bg-white/5"
              >
                <span class="font-medium">{capitalizeWords(category)}</span>
                <span class="text-sm text-black/50 dark:text-white/50">
                  {categoryPosts.length} Post{categoryPosts.length !== 1 ? 's' : ''}
                </span>
              </a>
            );
          })
        }
      </div>
    </div>
  </Container>
</Layout>
